@page "/GameTable"
    <style>
        body {
            font-family: 'Lilita One', cursive;
        }

        .container {
            width: 80%;
            padding-top: 0%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }
        .cards {
            margin-right: -28px;
        }
        .status-active {
            background-color: #74c69d;
            justify-content: center;
        }
        .status-bust {
            background-color: #ff0000;
            justify-content: center;
        }
        .status-win {
            background-color: #0094ff;
            justify-content: center;
        }
        .status-stay {
            background-color: #ffd800;
            justify-content: center;
        }
        .status {
            padding: 6px 12px;
            line-height: 1.5;
            text-align: center;
            font-weight: 400;
            font-weight: bold;
            font-size: 16px;
            vertical-align: middle;
            border-radius: 4px;
            display: inline-block;
            color: #212529;
        }
    </style>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lilita+One&display=swap" rel="stylesheet">
    <div class="container">
        @switch (Game.nextTask)
        {
            case PlayTask.PlayerTurn:
                @*Each player begins by deciding whether to draw or stay*@
                <h2 class="text-center mt-2">Total Amount in Pot: $@(Game.pot)</h2>
                <div class="row mt-4" style="width: 100%">
                    @for (int i = 0; i < Game.players.Count; i++)
                    {
                        int playerIndex = i;
                        Player player = Game.players[playerIndex];
                        <div class="col-12">
                            @*Highlight the current player*@
                            <div class="row alert alert-secondary align-items-center py-4 px-0" style="@(playerIndex == Game.currentPlayer ? "background-color: #c1e4fd" : "")">
                                <div class="col-sm-auto text-sm-center">
                                    <h3><strong>@player.name</strong></h3>
                                    <h6>
                                        Chips: @player.chip
                                    </h6>
                                </div>
                                <div class="col">
                                    <h4><strong>@player.score</strong></h4>
                                </div>
                                <div class="col-sm-5">
                                    <div class="row align-items-center">
                                        @foreach (Card card in player.cards)
                                        {
                                            @*When there are many cards, they will begin to overlap*@
                                            <img class=" @(player.cards.Count > 3 ? "cards" : "")" src="./CardAssets/@Game.deck.imagesDictionary[card.id]" />}
                                    </div>

                                </div>
                                <div class="col-sm-auto text-sm-center">
                                    @if (playerIndex == Game.currentPlayer)
                                    {
                                        if (player.status == PlayerStatus.active)
                                        {
                                            <div class="row status status-active">Active</div>
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-dark btn-left" @onclick="() => { Game.DrawCard(player);Game.DoNextTask(); }">Deal</button>
                                                <button type="button" class="m-1 btn btn-dark" @onclick="() => { Game.Stay(player);Game.DoNextTask(); }">Stay</button>
                                            </div>

                                        }
                                        else if (player.status == PlayerStatus.stay)
                                        {
                                            <div class="row status status-stay">Stay</div>
                                            Game.DoNextTask();
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                                <button type="button" class="m-1 btn btn-dark">Stay</button>
                                            </div>

                                        }
                                        else if (player.status == PlayerStatus.bust)
                                        {
                                            <div class="row status status-bust">Bust</div>
                                            Game.DoNextTask();
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                                <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                            </div>


                                        }
                                    }
                                    else
                                    {
                                        if (player.status == PlayerStatus.active)
                                        {
                                            <div class="row status status-active">Active</div>
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                                <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                            </div>
                                        }
                                        else if (player.status == PlayerStatus.stay)
                                        {
                                            <div class="row status status-stay">Stay</div>
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                                <button type="button" class="m-1 btn btn-dark" disabled>Stay</button>
                                            </div>
                                        }
                                        else if (player.status == PlayerStatus.bust)
                                        {
                                            <div class="row status status-bust">Bust</div>
                                            <div class="row m-2" style="justify-content:center">
                                                <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                                <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
                break;

            case PlayTask.CheckForEnd:

                @*Show the results of the current round and The button will display different content based on the result*@
                @if (!Game.CheckGameOver())
                {
                    button = "Next Round";
                }
                else
                {
                    button = "Game Over";
                }
                <h2 class="text-center mt-2">Total Amount in Pot: $@(Game.pot)</h2>
                <div class="row mt-4" style="width: 100%">
                    @for (int i = 0; i < Game.players.Count; i++)
                    {
                        int playerIndex = i;
                        Player player = Game.players[playerIndex];
                        <div class="col-12">
                            <div class="row alert alert-secondary align-items-center py-4 px-0" style="@(player.status == PlayerStatus.win ? "border: 8px solid #0094ff " : "")">
                                <div class="col-sm-auto text-sm-center">
                                    <h3><strong>@player.name</strong></h3>
                                    <h6>
                                        Chips: @player.chip
                                    </h6>
                                </div>
                                <div class="col">
                                    <h4><strong>@player.score</strong></h4>
                                </div>
                                <div class="col-sm-5">
                                    <div class="row align-items-center">
                                        @foreach (Card card in player.cards)
                                        {
                                            <img class="@(player.cards.Count > 3 ? "cards" : "")" src="./CardAssets/@Game.deck.imagesDictionary[card.id]" />}
                                    </div>

                                </div>
                                <div class="col-sm-auto text-sm-center">
                                    @if (player.status == PlayerStatus.win)
                                    {
                                        <div class="row status status-win">Win</div>
                                        <div class="row m-2" style="justify-content:center">
                                            <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                            <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                        </div>
                                    }
                                    else if (player.status == PlayerStatus.stay)
                                    {
                                        <div class="row status status-stay">Stay</div>
                                        <div class="row m-2" style="justify-content:center">
                                            <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                            <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                        </div>

                                    }
                                    else if (player.status == PlayerStatus.bust)
                                    {
                                        <div class="row status status-bust">Bust</div>
                                        <div class="row m-2" style="justify-content:center">
                                            <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                            <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                        </div>


                                    }
                                    else if (player.status == PlayerStatus.active)
                                    {
                                        <div class="row status status-bust" style="background-color: gray">Active</div>
                                        <div class="row m-2" style="justify-content:center">
                                            <button type="button" class="m-1 btn btn-light btn-left" disabled>Deal</button>
                                            <button type="button" class="m-1 btn btn-light" disabled>Stay</button>
                                        </div>

                                    }

                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col">
                        <hr />
                    </div>
                </div>

                <h4 class="text-center"><strong>@Game.roundWinner.name</strong> wins $@(Game.pot)!</h4>
                <div class="row justify-content-center">
                    <button class="btn btn-primary mt-4 mb-lg-5" @onclick="Next">@button</button>

                </div>

                break;
        }
    </div>

        @inject NavigationManager NavigationManager

        @code {

            private string button;
            /*Check if the game is over and link to the appropriate page
            *Is called by button
            *No parameter
            *No return
            */
            private void Next()
            {
                Game.DoNextTask();
                if (!Game.CheckGameOver())
                {
                    NavigationManager.NavigateTo("/Bet");

                }
                else
                {
                    Game.DoNextTask();
                    NavigationManager.NavigateTo("/GameOver");
                }
            }
        }
